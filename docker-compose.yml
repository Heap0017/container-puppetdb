version: '3.5'

services:
  puppet:
    hostname: puppet
    domainname: test
    image: puppet/puppetserver:latest
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-false}
      - PUPPETSERVER_HOSTNAME=puppet.test
      - CA_ALLOW_SUBJECT_ALT_NAMES=true
      - PUPPETDB_SERVER_URLS=https://puppetdb.test:8081
    ports:
      - 8140:8140
    dns_search: test
    networks:
      puppetdb_test:
        aliases:
         - puppet.test
  postgres:
    hostname: postgres
    domainname: test
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
      - POSTGRES_DB=puppetdb
    healthcheck:
      # existence check for puppetdb database
      test: [ 'CMD-SHELL', "psql --username=puppetdb puppetdb -c ''" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 90s
    expose:
      - 5432
    volumes:
      - ./puppetdb/postgres-custom:/docker-entrypoint-initdb.d
    dns_search: 'test'
    networks:
      puppetdb_test:
        aliases:
          - postgres.test

  puppetdb:
    hostname: puppetdb
    domainname: test
    image: ${PUPPET_TEST_DOCKER_IMAGE:-puppet/puppetdb}
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-false}
      - PUPPETDB_POSTGRES_HOSTNAME=postgres.test
      - PUPPETDB_PASSWORD=puppetdb
      - PUPPETDB_USER=puppetdb
      - PUPPETSERVER_HOSTNAME=puppet.test
    ports:
      - 8080
      - 8081
    depends_on:
      - postgres
      - puppet
    dns_search: 'test'
    networks:
      puppetdb_test:
        aliases:
          - puppetdb.test

networks:
  puppetdb_test:
    name: puppetdb_test
